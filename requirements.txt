# Adobe Hackathon Round 1B - Persona-Driven Document Intelligence
# Optimized requirements - essential packages only

# ===================================================================
# CORE PDF PROCESSING
# ===================================================================
PyMuPDF==1.26.3                # 15-30 PDFs/second, 0.1s per page, F1=0.97+
pdfplumber==0.11.7              # Enhanced table extraction with visual debugging

# ===================================================================  
# LIGHTWEIGHT AI MODELS (CPU-Optimized, <1GB Total)
# ===================================================================
sentence-transformers==5.0.0    # Static embeddings: 400x faster than transformers
onnxruntime==1.22.1          # Model optimization: 4x size reduction, 2-3x speedup
transformers==4.53.2            # For DistilBERT/TinyBERT lightweight models
torch==2.7.1                    # CPU-only PyTorch (smaller than 2.7.1)
tokenizers==0.21.2             # Fast tokenization

# ===================================================================
# UNIVERSAL NLP & TEXT ANALYSIS (Domain-Agnostic)
# ===================================================================
scikit-learn==1.7.0          # TF-IDF, cosine similarity, zero-shot classification
pandas==2.3.1                 # Data manipulation (lighter than 2.2.3)
numpy==2.2.6                  # Numerical computing (compatible with all packages)
scipy==1.16.0                 # Scientific computing (compatible version)
nltk==3.9.1                    # Universal text preprocessing
spacy==3.8.7                  # Advanced NLP (without large models)

# ===================================================================
# DOMAIN DETECTION & CONTENT CLASSIFICATION 	
# ===================================================================
# Readability analysis (universal).
textstat==0.7.7
# Modern, accurate language detection for short & long text. Replaces langdetect.
lingua-language-detector==2.1.1
# Simple text analysis (sentiment, noun phrases).
textblob==0.19.0
# High-performance fuzzy string matching. Replaces fuzzywuzzy & python-Levenshtein. MIT license.
rapidfuzz==3.13.0
# Multiple string similarity algorithms.
textdistance==4.6.3

# ===================================================================
# HIGH-PERFORMANCE PROCESSING (Memory & Speed Optimized)
# ===================================================================
# Parallel computing and transparent caching.
joblib==1.5.1
# JIT compilation for numerical functions.
numba==0.61.2
# System monitoring and resource management.
psutil==7.0.0

# ===================================================================
# MEMORY OPTIMIZATION & CACHING
# ===================================================================
# High-performance disk-based caching for embeddings.
diskcache==5.6.3
# Fast, C-based in-memory LRU cache.
lru-dict==1.3.0
# Memory usage monitoring. 
memory-profiler==0.61.0
# Memory analysis and debugging.
Pympler==1.1

# ===================================================================
# UNIVERSAL DATA PROCESSING 	
# ===================================================================
# JSON validation.
jsonschema==4.24.1
# Data validation and settings management.
pydantic==2.11.7
# Date parsing (universal formats).
python-dateutil==2.9.0.post0
# Enhanced regex support.
regex==2024.11.6

# ===================================================================
# PERFORMANCE MONITORING & PROFILING
# ===================================================================
# Progress bars for long operations.
tqdm==4.67.1
# Line-by-line performance profiling (intrusive).
line-profiler==4.2.0
# Sampling profiler for non-intrusive, production-ready analysis.
py-spy==0.4.0
# ===================================================================
# TESTING & VALIDATION FRAMEWORK
# ===================================================================
# Testing framework.
pytest==8.4.1
# Coverage reporting.
pytest-cov==6.2.1
# Mocking utilities.
pytest-mock==3.14.1
# Performance benchmarking.
pytest-benchmark==5.1.0
# XML test reporting for CI/CD integration.
unittest-xml-reporting==3.2.0

# ===================================================================
# CONFIGURATION & UTILITIES
# ===================================================================
# YAML configuration files.
PyYAML==6.0.2
# Environment variable management.
python-dotenv==1.1.1
# Command-line interface creation.
click==8.2.1
# Beautiful terminal output.
rich==14.0.0
# Cross-platform colored output (dependency for rich/tqdm).
colorama==0.4.6

# ===================================================================
# UNIVERSAL DOCUMENT FEATURES
# ===================================================================
# OCR for scanned documents (when needed).
pytesseract==0.3.13
# Image processing for OCR.
pillow==11.3.0
# Excel processing (if needed).
openpyxl==3.1.5
# File type detection.
python-magic==0.4.27

# ===================================================================
# GRACEFUL DEGRADATION & ERROR HANDLING
# ===================================================================
# Retry logic with exponential backoff.
tenacity==9.1.2
# Circuit breaker pattern for resilience.
circuit-breaker==0.1.1
# Simplified, powerful logging. Replaces structlog for simplicity.
loguru==0.7.3

# ===================================================================
# SECURITY & VALIDATION
# ===================================================================
# SSL certificates (for model downloads).
certifi==2025.7.14
# HTTP library (dependency for other packages).
urllib3==2.5.0
# HTTP requests (for setup/dev only).
requests==2.32.4


# ===================================================================
# DEVELOPMENT DEPENDENCIES (Optional - Comment out for production)
# ===================================================================
# jupyter==1.0.0              # For development and analysis
# matplotlib==3.8.2           # For plotting and visualization  
# seaborn==0.13.0             # Statistical visualization
# plotly==5.17.0              # Interactive plotting
# ipython==8.18.1             # Interactive Python shell

# ===================================================================
# TOTAL ESTIMATED SIZE: ~800MB (Well within 1GB constraint)
# PERFORMANCE TARGET: Process 10 PDFs in <45 seconds
# MEMORY TARGET: Peak usage <900MB 
# ===================================================================